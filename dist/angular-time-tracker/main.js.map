{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/inprogresssprint/inprogresssprint.component.css","webpack:///./src/app/inprogresssprint/inprogresssprint.component.html","webpack:///./src/app/inprogresssprint/inprogresssprint.component.ts","webpack:///./src/app/newsprint/newSprint.ts","webpack:///./src/app/newsprint/newsprint.component.css","webpack:///./src/app/newsprint/newsprint.component.html","webpack:///./src/app/newsprint/newsprint.component.ts","webpack:///./src/app/pastsprints/pastsprints.component.css","webpack:///./src/app/pastsprints/pastsprints.component.html","webpack:///./src/app/pastsprints/pastsprints.component.ts","webpack:///./src/app/sprint.service.ts","webpack:///./src/app/sprint/sprint.component.css","webpack:///./src/app/sprint/sprint.component.html","webpack:///./src/app/sprint/sprint.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: #3f00b3;\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <img src=\\\"../logo.png\\\" width=\\\"30\\\" height=\\\"30\\\" alt=\\\"\\\">\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarText\\\" aria-controls=\\\"navbarText\\\"\\n        aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarText\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item active\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/\\\"><font color=\\\"white\\\">≡Sprint</font><span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n        </ul>\\n        <span class=\\\"navbar-text\\\" *ngIf=\\\"!auth.isAuthenticated()\\\" (click)=\\\"auth.login()\\\">\\n            <a routerLink=\\\"/login\\\"><font color=\\\"white\\\">Login</font></a>\\n        </span>\\n        <span class=\\\"navbar-text\\\" *ngIf=\\\"auth.isAuthenticated()\\\">\\n            <nav>\\n                <a routerLink=\\\"/sprint\\\"><font color=\\\"white\\\">Sprints</font></a>\\n                <a routerLink=\\\"/logout\\\" (click)=\\\"auth.logout()\\\"><font color=\\\"white\\\">Logout</font></a>\\n            </nav>\\n        </span>\\n    </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Time Tracker';\n\n  constructor(public auth: AuthService) { }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'; \nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { SprintComponent } from './sprint/sprint.component';\nimport { PastsprintsComponent } from './pastsprints/pastsprints.component';\nimport { NewsprintComponent } from './newsprint/newsprint.component';\n\nimport { InprogresssprintComponent } from './inprogresssprint/inprogresssprint.component';\n\nimport { AuthService } from './auth.service';\nimport { SprintService } from './sprint.service';\n\nconst routes: Routes = [\n  { path: '', component: WelcomeComponent, pathMatch: 'full' },\n  { path: 'sprint', component: SprintComponent },\n  { path: 'newsprint', component: NewsprintComponent },\n  { path: 'pastsprints', component: PastsprintsComponent },\n  { path: 'inprogress', component: InprogresssprintComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    SprintComponent,\n    PastsprintsComponent,\n    NewsprintComponent,\n    InprogresssprintComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [\n    AuthService,\n    SprintService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from '../environments/environment';\n\nimport { tokenNotExpired } from 'angular2-jwt';\nimport Auth0Lock from 'auth0-lock';\n\n@Injectable()\nexport class AuthService {\n  auth0Options = {\n    auth: {\n      redirectUrl: environment.auth0.callbackURL,\n      responseType: 'token id_token',\n      audience: `https://${environment.auth0.domain}/userinfo`,\n      params: {\n        scope: 'openid profile'\n      }\n    },\n    autoclose: true,\n    oidcConformant: true,\n  };\n\n  lock = new Auth0Lock(\n    environment.auth0.clientId,\n    environment.auth0.domain,\n    this.auth0Options\n  );\n\n  constructor(private router: Router) {\n    this.lock.on('authenticated', (authResult: any) => {\n      this.lock.getUserInfo(authResult.accessToken, (error, profile) => {\n        if (error) {\n          throw new Error(error);\n        }\n        localStorage.setItem('token', authResult.idToken);\n        localStorage.setItem('profile', JSON.stringify(profile));\n        this.router.navigate(['/sprint']);\n      });\n    });\n\n    this.lock.on('authorization_error', error => {\n      console.log('something went wrong', error);\n    });\n  }\n\n  login() {\n    this.lock.show();\n  }\n\n  logout() {\n    localStorage.removeItem('profile');\n    localStorage.removeItem('token');\n    this.router.navigate(['/']);\n  }\n\n  isAuthenticated() {\n    return tokenNotExpired();\n  }\n}","module.exports = \"\"","module.exports = \"<p>\\n  Progress\\n</p>\\n\\n<p>Focus fully on your task</p>\\n\\n<div class=\\\"form-group\\\">\\n  <div class=\\\"col-sm-10\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-danger\\\" data-toggle=\\\"modal\\\" data-target=\\\"#onhold\\\">Stop</button>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal fade\\\" id=\\\"onhold\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLongTitle\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h3 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">On hold. Cancel sprint?</h3>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-footer\\\">\\n        <form (ngSubmit)=\\\"stopSprint()\\\" #stopSprintForm=\\\"ngForm\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">YES</button>\\n        </form>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">NO</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { SprintService } from \"../sprint.service\";\n\n@Component({\n  selector: 'app-inprogresssprint',\n  templateUrl: './inprogresssprint.component.html',\n  styleUrls: ['./inprogresssprint.component.css']\n})\nexport class InprogresssprintComponent implements OnInit {\n\n  newSprint = (JSON.parse(localStorage.getItem('sprint')));\n\n  sprints: Array<any>;\n  addedSprint: any;\n  requesting: boolean;\n\n  constructor(private sprintService: SprintService) { }\n\n  ngOnInit() {\n    this.addedSprint = {}\n    this.requesting = false;\n  }\n\n  stopSprint() {\n    this.requesting = true;\n    this.sprintService.createSprint(this.addedSprint).subscribe((res) => {\n      this.sprints.push(this.newSprint);\n      this.addedSprint = {};\n      this.requesting = false;\n    })\n\n\n    localStorage.removeItem('sprint');\n    console.log('INSERT INTO SPRINT');\n  }\n\n  finishSprint() {\n    this.requesting = true;\n    this.sprintService.createSprint(this.addedSprint).subscribe((res) => {\n      this.sprints.push(this.newSprint);\n      this.addedSprint = {};\n      this.requesting = false;\n    })\n\n    localStorage.removeItem('sprint');\n    console.log('INSERT INTO SPRINT');\n  }\n\n}","export class NewSprint {\r\n\r\n    constructor(\r\n      public sprintLength: string,\r\n      public description: string,\r\n      public notification: boolean\r\n    ) {  }\r\n  \r\n  }","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div [hidden]=\\\"submitted\\\">\\n    <h1>Start a sprint</h1>\\n    <form (ngSubmit)=\\\"saveSprint(newsprintForm)\\\" #newsprintForm=\\\"ngForm\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"sprintLength\\\">Choose length</label>\\n        <select class=\\\"form-control\\\" id=\\\"sprintLength\\\" required [(ngModel)]=\\\"model.sprintLength\\\" name=\\\"sprintLength\\\" #sprintLength=\\\"ngModel\\\">\\n          <option *ngFor=\\\"let sprintLeng of sprintLengths\\\" [value]=\\\"sprintLeng\\\">{{sprintLeng}}</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"description\\\">Description</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"What will you be doing?\\\" id=\\\"description\\\" required [(ngModel)]=\\\"model.description\\\"\\n          name=\\\"description\\\" #description=\\\"ngModel\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-10\\\">\\n          <div class=\\\"form-check\\\">\\n            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"notification\\\" [(ngModel)]=\\\"model.notification\\\" name=\\\"notification\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"notification\\\">\\n              Notify when completed\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-10\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!newsprintForm.form.valid\\\">Start</button>\\n        </div>\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\\n\\n\\n<div [hidden]=\\\"!submitted\\\">\\n  <app-inprogresssprint></app-inprogresssprint>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\nimport { NewSprint } from \"./newSprint\";\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-newsprint',\n  templateUrl: './newsprint.component.html',\n  styleUrls: ['./newsprint.component.css']\n})\nexport class NewsprintComponent implements OnInit {\n\n\n  sprintLengths = ['Instant (5 s)',\n    'Very Short (5 min)',\n    'Short (15 min)',\n    'Pomodoro (25 min)',\n    'Long (45 min)',\n    'Very Long (60 min)'];\n\n  model = new NewSprint('Pomodoro (25 min)', null, false);\n\n  submitted = false;\n\n  get diagnostic() { return JSON.stringify(this.model); }\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  saveSprint(form: NgForm) {\n    const params = form.value;\n    const now: Date = new Date();\n    const sec = now.getSeconds();\n    const minutes = now.getMinutes();\n    const hours = now.getHours();\n    const startTime = hours + ':' + minutes + ':' + sec;\n\n    localStorage.setItem('sprint', JSON.stringify(params));\n    /*const sprintDuration = params['sprintLength'].split('(')[1].split(')')[0].split(' ');\n    var timeValue = parseInt(sprintDuration[0]);\n    const timeUnit = sprintDuration[1];\n    if (timeUnit === 'min') {\n      timeValue = timeValue * 60;\n    }*/\n\n    //this.router.navigate(['/inprogress']);\n    /*const startTimeS = sec + minutes * 60 + hours * 3600;\n    var finishTimeS = timeValue + startTimeS;*/\n\n    this.submitted = true;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">Length</th>\\n      <th scope=\\\"col\\\">Status</th>\\n      <th scope=\\\"col\\\">Date</th>\\n      <th scope=\\\"col\\\">Start</th>\\n      <th scope=\\\"col\\\">Finish</th>\\n      <th scope=\\\"col\\\">Description</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let sprints of pastsprints\\\">\\n      <td>{{sprint.lenght}}</td>\\n      <td>{{sprint.status}}</td>\\n      <td>{{sprint.date}}</td>\\n      <td>{{sprint.start}}</td>\\n      <td>{{sprint.finish}}</td>\\n      <td>{{sprint.description}}</td>\\n    </tr>\\n</table>\\n\\n<div class=\\\"form-group\\\">\\n  <div class=\\\"col-sm-10\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-danger\\\" data-toggle=\\\"modal\\\" data-target=\\\"#areyousure\\\">Delete all data</button>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"areyousure\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLongTitle\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h3 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Deletion is irreversible. Are you sure?</h3>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>The only information concerning your user that we store are your past sprints. We do not store information about\\n          your user itself.</p>\\n        <p>Delete to eliminate all records.</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <form (ngSubmit)=\\\"deleteUserSprints()\\\" #deletesprintForm=\\\"ngForm\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">YES</button>\\n        </form>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">NO</button>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SprintService } from \"../sprint.service\";\n\n@Component({\n  selector: 'app-pastsprints',\n  templateUrl: './pastsprints.component.html',\n  styleUrls: ['./pastsprints.component.css']\n})\nexport class PastsprintsComponent implements OnInit {\n\n  username = (JSON.parse(localStorage.getItem('profile'))).name;\n\n  sprints: Array<any>;\n  requesting: boolean;\n\n\n  constructor(private router: Router, private sprintService: SprintService) {\n    this.getUserSprints();\n  }\n\n  ngOnInit() {\n    this.requesting = false;\n  }\n\n  getUserSprints() {\n    console.log('SELECT * FROM SPRINT WHERE USER' + this.username);\n    this.requesting = true;\n    this.sprintService.getSprints().subscribe((res) => {\n      this.sprints = res.sprints;\n      this.requesting = false;\n    }, (err) => {\n      this.requesting = false;\n    })\n  }\n\n  deleteUserSprints() {\n    console.log('DELETE FROM SPRINT WHERE USER:=' + this.username);\n    this.requesting = true;\n    this.sprintService.deleteSprints().subscribe(() => {\n      this.sprints.forEach((t, i) => {\n        /*if (t.id == todo.id) {\n          this.todos.splice(i, 1);\n        }*/\n      });\n      this.requesting = false;\n    })\n    this.router.navigate(['/sprint']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SprintService {\n\n  constructor(private http: Http) { }\n\n  getSprints() {\n    return this.http.get(environment.api + '/sprint')\n      .map(res => res.json());\n  }\n\n  createSprint(sprint) {\n    return this.http.post(environment.api + '/newsprint', sprint)\n      .map(res => res.json());\n  }\n\n  deleteSprints() {\n    return this.http.delete(environment.api + '/deletesprint');\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"nav\\\">\\n  <form (ngSubmit)=\\\"navigationPast()\\\" #newsprintForm=\\\"ngForm\\\">\\n    <button type=\\\"submit\\\" class=\\\"nav-link\\\">Past Sprints </button>\\n  </form>\\n  <form (ngSubmit)=\\\"navigationNew()\\\" #newsprintForm=\\\"ngForm\\\">\\n    <button type=\\\"submit\\\" class=\\\"nav-link\\\">New Sprint </button>\\n  </form>\\n</nav>\\n\\n\\n<div [hidden]=\\\"!pastpage\\\">\\n  <app-pastsprints></app-pastsprints>\\n</div>\\n\\n<div [hidden]=\\\"pastpage\\\">\\n  <app-newsprint></app-newsprint>\\n</div>\\n\\n<p>Logged in as <label id='username'></label> </p>\\n<router-outlet></router-outlet>\\n\\n<script>document.getElementById(\\\"username\\\").innerHTML = localStorage.profile.name;</script>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sprint',\n  templateUrl: './sprint.component.html',\n  styleUrls: ['./sprint.component.css']\n})\nexport class SprintComponent implements OnInit {\n\n  pastpage = true;\n  current = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  navigationPast() {\n    this.pastpage = true;\n  }\n\n  navigationNew() {\n    this.pastpage = false;\n  }\n\n}","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\" style=\\\"width: 18rem; position: absolute; margin: auto; top: 10%;\\n                        right: 0; bottom: 55%; left: 0;\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">About</h5>\\n    <p class=\\\"card-text\\\">Sprint is a minimalist desktop time management application inspired by the <a href='http://en.wikipedia.org/wiki/Pomodoro_Technique'\\n        style=\\\"color: black; text-decoration: underline;\\\">Pomodoro Technique</a>.</p>\\n    <p class=\\\"card-text\\\">Choose a sprint length, enter a brief description of the activity, and get things done.</p>\\n    <p class=\\\"card-text\\\">Preferred browser: <a href='http://www.google.com/chrome' style=\\\"color: black; text-decoration: underline;\\\">Chrome</a>.</p>\\n    <p class=\\\"card-text\\\"><a href='' data-toggle=\\\"modal\\\" data-target=\\\"#termsandconditions\\\" style=\\\"color: black; text-decoration: underline;\\\">Terms\\n        and conditions</a>.</p>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal fade\\\" id=\\\"termsandconditions\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLongTitle\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h3 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Terms and Conditions</h3>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>≡Sprint</p>\\n        <p>version 0.3</p>\\n        You understand this is a demonstrative application. Long term persistence of your data is not guaranteed.\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://localhost:8080/sprint',\n  auth0: {\n    domain: 'time-tracker-salim.auth0.com',\n    clientId: 'elCGXM6IvU47sa_wYSQ8BTrM_2308TUI',\n    callbackURL: 'http://localhost:4200/'\n  }\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}